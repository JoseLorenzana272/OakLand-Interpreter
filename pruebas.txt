int a = 10;
float b = 5.5;
string c = "Hello";
bool d = true;
char e = 'A';
int u = 10;

a += 5;
b -= 2.2;
c = "World";

System.out.println("Values after operations: ", a, " ", b, " ", c, " ", d);

{
    int f = a + 7;
    System.out.println("Sum of a and 7:", f);
}

a = (u + 2) * 3;
d = !d;

System.out.println("Updated values: ", a, " ", d);

int g = (a > 20) ? a : u;
System.out.println("Ternary operation result: ", g);

if(a > 30) {
    System.out.println("a is greater than 30");
} else {
    System.out.println("a is not greater than 30");
}

if(a > 20) {
    System.out.println("a is greater than 20");

    if(b > 3) {
        System.out.println("b is greater than 3");
    } else {
        System.out.println("b is not greater than 3");
    }

} else {
    System.out.println("a is not greater than 20");
}

if(7 < 4) {
    System.out.println(1);
} else if(2 < 5) {
    System.out.println(2);
} else {
    System.out.println(3);
}

int counter = 0;

while (counter < 5) {
    System.out.println("Counter: ", counter);
    counter += 1;
}

System.out.println("Final counter value: ", counter);

int jose = 10;
int dani = 0;

while (jose > 5) {
    jose -= 1;
    dani += 2;
    System.out.println("jose: ", jose, " dani: ", dani);
}

int goku = 3;
while (goku > 0) {
    System.out.println("goku: ", goku);
    int vegeta = goku;
    while (vegeta > 0) {
        System.out.println("vegeta: ", vegeta);
        vegeta -= 1;
    }
    goku -= 1;
}

System.out.println("Final values -> jose: ", jose, " dani: ", dani, " goku: ", goku);
System.out.println("---------------------------------------");
for (int t = 0; t < 4; t++) {
    int r = (t < 2) ? t : a;
    System.out.println("For loop, t: ", t, " r: ", r);

    int counter = r;
    while (counter > 0) {
        if (counter % 2 == 0) {
            System.out.println("Counter is even: ", counter);
        } else {
            System.out.println("Counter is odd: ", counter);
        }
        counter -= 1;
    }
}

var num1 = parseInt("1.99999");
var num2 = 23;
System.out.println(toString(num1) + toString(num2));

System.out.println(toString(true) + "false");

string cadena = toString(false) + "->" + toString(num1);
System.out.println(cadena);

// Switch case normal
int option = 2;

switch(option) {
    case 1:
        System.out.println("Option 1 selected");
        break;
    case 2:
        System.out.println("Option 2 selected");
        break;
    case 3:
        System.out.println("Option 3 selected");
        break;
    default:
        System.out.println("Invalid option");
}

// Switch case complicado
string command = "LOWER";

switch(toUpperCase(command)) {
    case "UPPER":
        System.out.println("Command is UPPER");
        break;
    case "LOWER":
        System.out.println("Command is LOWER");
        string lowerStr = "HELLO WORLD";
        System.out.println("Lowercase: " + toLowerCase(lowerStr));
        break;
    case "MIXED":
        System.out.println("Command is MIXED");
        break;
    default:
        System.out.println("Unknown command");
}

// Using parseFloat and toUpperCase
float numFloat = parsefloat("12.34");
System.out.println("Parsed float: " + toString(numFloat));

string mixedCase = "hello WoRld";
System.out.println("Uppercase string: " + toUpperCase(mixedCase));

// Arrays
int[] numbers = {10, 20, 30, 40, 50};
string[] words = {"apple", "banana", "cherry"};

System.out.println("First number: ", numbers[0]);
System.out.println("Second word: ", words[1]);

// Copiar un array
int[] copiedNumbers = new int[numbers.length];
for(int i = 0; i < numbers.length; i++) {
    copiedNumbers[i] = numbers[i];
}

System.out.println("Copied array: ", copiedNumbers.join());

// Array functions
System.out.println("Array length: ", numbers.length);

int index = words.indexOf("banana");
System.out.println("Index of 'banana': ", index);

// Accessing a value from an array
int thirdNumber = numbers[2];
System.out.println("Third number: ", thirdNumber);

// Join function
string joinedWords = words.join();
System.out.println("Joined words: ", joinedWords);

System.out.println("Final array values:");
for (int i = 0; i < copiedNumbers.length; i++) {
    System.out.println(copiedNumbers[i]);
}

int[][][] mtx3D = {
    {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}
    },
    {
        {10, 11, 12},
        {13, 14, 15},
        {16, 17, 18}
    }
};

// Transponer la primera submatriz (dimensión [0])
int[][] transpuesta = new int[3][3];
for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 3; j++) {
        transpuesta[i][j] = mtx3D[0][j][i];
    }
}

// Verificar la transposición
System.out.println(transpuesta[0][0]);  // Debería devolver 1
System.out.println(transpuesta[0][1]);  // Debería devolver 4
System.out.println(transpuesta[0][2]);  // Debería devolver 7

bool[][][][][] boolMatrix5D = {
    {
        {
            {
                {true, false},
                {false, true}
            },
            {
                {true, true},
                {false, false}
            }
        },
        {
            {
                {false, true},
                {true, false}
            },
            {
                {true, true},
                {true, false}
            }
        }
    },
    {
        {
            {
                {false, false},
                {true, true}
            },
            {
                {true, false},
                {false, true}
            }
        },
        {
            {
                {true, false},
                {false, true}
            },
            {
                {false, true},
                {true, true}
            }
        }
    }
};

System.out.println(boolMatrix5D[0][1][0][1][0]);